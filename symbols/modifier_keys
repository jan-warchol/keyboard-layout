default partial alphanumeric_keys modifier_keys
xkb_symbols "pc105" {
    include "srvr_ctrl(fkey2vt)"
    include "keypad(x11)"

    key <TVAN> { [ XF86Sleep ] };
    key <BACK> { [ XF86MonBrightnessDown ] };
    key <FRWD> { [ XF86MonBrightnessUp ] };

    key <VOL-> { [ XF86AudioLowerVolume  ] };
    key <VOL+> { [ XF86AudioRaiseVolume  ] };

    key <PRSC> {
        type= "PC_ALT_LEVEL2",
        symbols[Group1]= [ Print, Sys_Req ]
    };
    key <SCLK> { [ Scroll_Lock ] };
    key <NMLK> { [ Num_Lock ] };
    key <PAUS> {
        type= "PC_CONTROL_LEVEL2",
        symbols[Group1]= [ Pause, Break ]
    };

    key <ESC> { [ Escape ] };

    key <FK11> { [ Home, Home, F11 ] };
    key <FK12> { [ End, End, F12 ] };
    key <PGUP> { [ Prior ] };
    key <PGDN> { [ Next ] };

    key <UP> { [ Up ] };
    key <LEFT> { [ Left ] };
    key <DOWN> { [ Down ] };
    key <RGHT> { [ Right ] };

    key <BKSP> { [ BackSpace ] };
    key <TAB> { [ Tab, ISO_Left_Tab ] };

    // Shift keys. Pressing them both toggles Caps_Lock.
    key <CAPS> {
        type[Group1]="TWO_LEVEL",
        symbols[Group1] = [ Shift_L, Caps_Lock ]
    };
    // WTF Shift_R doesn't work properly - if I define this key like this:
    //     type[Group1]="TWO_LEVEL",
    //     symbols[Group1] = [ Shift_R, Caps_Lock ]
    // then right shift only works when Caps_Lock is on...
    key <RTRN> {
        type[Group1]="TWO_LEVEL",
        symbols[Group1] = [ Shift_L, Caps_Lock ]
    };

    key <{{ xkb_lctrl_key }}> { [ Control_L ] };
    key <{{ xkb_lwin_key }}>  { [ Super_L ] };
    key <{{ xkb_lalt_key }}>  { [ Alt_L, Meta_L ] };
    key <{{ xkb_space_key }}> { [ space ] };
    key <{{ xkb_ralt_key }}>  { [ ISO_Level3_Shift ] };
    key <{{ xkb_rwin_key }}>  { [ Super_R ] };
    key <{{ xkb_rctrl_key }}> { [ Control_R ] };

    key <{{ xkb_return_key }}> { [ Return ] };
    key <{{ xkb_delete_key }}> { [ Delete ] };
    {% if "custom_keyboard" in group_names %}
    key <SPCE> { [ space ] };
    {% endif %}

    // Beginning of modifier mappings.
    modifier_map Shift { Shift_L, Shift_R };
    modifier_map Lock { Caps_Lock };
    modifier_map Control { Control_L, Control_R };
    modifier_map Mod1 { Alt_L, Meta_L };
    modifier_map Mod2 { Num_Lock };
    modifier_map Mod4 { Super_L, Super_R };
    modifier_map Mod5 { ISO_Level3_Shift };

    key <META> { [ NoSymbol, Meta_L ] };
    modifier_map Mod1  { <META> };

    key <SUPR> { [ NoSymbol, Super_L ] };
    modifier_map Mod4  { <SUPR> };

    key <HYPR> { [ NoSymbol, Hyper_L ] };
    modifier_map Mod4  { <HYPR> };
    // End of modifier mappings.
};

